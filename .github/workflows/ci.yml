name: CI
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_SYSROOT_DIR: /
permissions:
  contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os:
          # GNU Linux (x64)
          - [ubuntu-latest, x86_64-unknown-linux-gnu]
          # macOS Intel (x64)
          - [macos-latest, x86_64-apple-darwin]
          # macOS Apple Silicon (ARM64)
          - [macos-latest, aarch64-apple-darwin]
          # Windows 10 (x64)
          - [windows-latest, x86_64-pc-windows-msvc]
      fail-fast: false
    runs-on: ${{ matrix.os[0] }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@b32f140b0c872d58512e0a66172253c302617b90

      - name: Rust Target
        run: |
          rustup target add ${{ matrix.os[1] }}

      - name: Setup rust cache
        uses: Swatinem/rust-cache@640a22190e7a783d4c409684cea558f081f92012
        with:
          prefix-key: "${{ runner.os }}-${{ matrix.os[1] }}-k-librarian-build-rust"

      - name: Setup Node
        uses: actions/setup-node@c2ac33f2c62f978d6c944d9648125a294e56dc0b
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (Frontend)
        run: npm run build

      - name: Build (Backend)
        run: |
          cargo build --profile ci --verbose --all --target ${{ matrix.os[1] }}
        shell: bash

      # Package the binary + assets
      # binary: /target/ci/k-librarian.exe
      # assets: /assets/
      - name: Prepare package
        if: matrix.os[0] != 'windows-latest'
        shell: bash
        run: |
          mkdir -p final
          cd target/${{ matrix.os[1] }}/ci
          chmod +x k-librarian
          cd ../../..
          mv target/${{ matrix.os[1] }}/ci/k-librarian final/
          cp -r assets final/
          cp .env.example final/
          cd final
          tar -czvf ../k-librarian-${{ matrix.os[1] }}.tar.gz *
          cd ..

      - name: Prepare package (Win32)
        if: matrix.os[0] == 'windows-latest'
        run: |
          mkdir -p final
          mv target/${{ matrix.os[1] }}/ci/k-librarian.exe final/
          cp -r assets final/
          cp .env.example final/.env-example
          cd final
          Compress-Archive -Path * -DestinationPath ../k-librarian-${{ matrix.os[1] }}.zip
          cd ..

      # Upload the binary + assets
      - name: Upload
        uses: actions/upload-artifact@ef09cdac3e2d3e60d8ccadda691f4f1cec5035cb
        if: matrix.os != 'windows-latest'
        with:
          name: k-librarian-${{ matrix.os[1] }}
          path: |
            k-librarian-${{ matrix.os[1] }}.zip
            k-librarian-${{ matrix.os[1] }}.tar.gz

  releases:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner == 'noaione'
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@b32f140b0c872d58512e0a66172253c302617b90

      - name: Download artifacts
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427
        with:
          path: k-librarian
          pattern: k-librarian-*
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
        with:
          files: |
            k-librarian/*
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
