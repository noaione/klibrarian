name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust Cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index/
              ~/.cargo/registry/cache/
              ~/.cargo/git/db/
              target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build backend
        run: cargo build --verbose
      - name: Cargo clippy
        run: cargo clippy --verbose -- -D warnings
      - name: Cargo fmt
        run: cargo fmt -- --check
  release:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust Cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index/
              ~/.cargo/registry/cache/
              ~/.cargo/git/db/
              target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Build backend
        run: cargo build --release --verbose
      # Package the binary + assets
      # binary: /target/release/k-librarian.exe
      # assets: /assets/
      - name: Package
        run: |
          mkdir -p /tmp/k-librarian
          cp target/release/k-librarian /tmp/k-librarian/
          cp -r assets /tmp/k-librarian/
          cd /tmp
          zip -r k-librarian.zip k-librarian
      # Upload the binary + assets
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: k-librarian
          path: /tmp/k-librarian.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        # Run only on tags
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: /tmp/k-librarian.zip
          generate_release_notes: true
          # Put in draft so I can manually review
          draft: true
